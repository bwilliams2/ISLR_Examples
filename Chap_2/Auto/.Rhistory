value = c(incomeSum,deductSum,taxesSum,netPay)
)
links
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
View(Energy)
links$source
links$target
nodes$name
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
nodes$name
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
thisSource
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
c(melTaxes[melTaxes$description==thisSource,]$amount,bryceTaxes$description==thisSource,]$amount)
c(melTaxes[melTaxes$description==thisSource,]$amount,bryceTaxes[bryceTaxes$description==thisSource,]$amount)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
grossPay
deductSum
netPay
deductSources
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
deductSources
deductSources = unique(deduct$description)
deductSources
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
totals <- dbGetQuery(con,paste("SELECT * FROM ",allTables[4]," WHERE year =",thisYear,sep=""))
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
totals$description
sum(totals[totals$description=='Net_Income']$amount)
sum(totals[totals$description=='Net_Income',]$amount)
sum(totals[totals$description=='Gross',]$amount)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
sum(totals[totals$description=='Net_Income']$amount)
View(totals)
2687.57-538.65-472.32
3384.62-808.20-394.02
sum(deduct$amount)
deductSum
sum(deductSum)
sum(income$amount)
sum(incomeSum)
sum(totals[totals$description=='Deductions']$amount)
sum(totals[totals$description=='Deductions',]$amount)
sum(deductSum)
sum(totals[totals$description=='Taxes',]$amount)
sum(taxesSum)
sum(totals[totals$description=='Net_Income',]$amount)
netPay
sum(totals[totals$description=='Gross',]$amount)
grossPay
grossPay-sum(totals[totals$description=='Gross',]$amount)
sum(bryceIncome$amount)
sum(bryceIncome$amount)-sum(bryceTaxes$amount)-sum(bryceDeduct$amount)
sum(bryceDeduct$amount)
sum(bryceTaxes$amount)
9751.82-9611
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
sum(totals[totals$description=='Taxes',]$amount)
sum(melIncome$amount)
sum(melIncome$amounts)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
sum(melIncome$amounts)
income$name
melIncome
melIncome$amount
sum(melIncome$amount)
61468.71 - 60118.71
975+46109.86
ans
sum(income$amount)
sum(totals$gross)
sum(totals[totals$description=='Gross',]$amount)
150608.4-149258.4
sum(totals[totals$description=='Net_Income',]$amount)
netPay
netPay - sum(totals[totals$description=='Net_Income',]$amount)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
seq(length(incomeSources) - 1)
incomeSources
income
income <- dbGetQuery(con,paste("SELECT * FROM ",allTables[2]," WHERE year =",thisYear,sep=""))
income
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
sum(totals$Gross)
sum(totals[totals$description=='Gross',]$amount)
sum(totals[totals$description=='Net_Income',]$amount)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
install htmlwidgets
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
source('~/OneDrive/Finance/Payslips/.analysis/payPlotter.R', echo=TRUE)
deductSum
sum(deductSum)
grossPay-sum(deductSum)
college <- read.csv('College.csv')
college <- read.csv('College.csv')
fix(college)
college <- read.csv('College.csv')
rownames(college) = college[,1]
fix(college)
college <- read.csv('College.csv')
rownames(college) = college[,1]
fix(college)
college = college[,-1]
fix(college)
college <- read.csv('College.csv')
fix(college)
rownames(college) = college[,1]
fix(college)
college = college[,-1]
fix(college)
college[,1]
college <- read.csv('College.csv')
fix(college)
rownames(college) = college[,1]
fix(college)
college = college[,-1]
fix(college)
college[,-1]
d=college[,-3]
View(d)
college <- read.csv('College.csv')
college <- read.csv('College.csv')
fix(college)
rownames(college) = college[,1]
fix(college)
college = college[,-1]
fix(college)
d=college[,-1]
View(d)
d=college[,-2]
View(d)
fix(college)
d=college[,-2:-4]
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R')
ls
college = college[,-1]
summary(college)
#Create variable summary
college <- Summarysummary(college)
#Create variable summary
collegeSummary <- summary(college)
View(d)
collegeSummary
#Create scatterplot
pairs(college[,1:10])
View(college)
boxplot(Private~Outstate,data=college)
boxplot(Outstate~Private,data=college)
boxplot(Outstate~Private,data=college)
college['Private']
college['Private]
college[Private]
dd
4
1
6
145123
college
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
college <- read.csv('College.csv')
rownames(college) = college[,1]
college = college[,-1]
#Create variable summary
collegeSummary <- summary(college)
#Create scatterplot
pairs(college[,1:10])
#Create boxplot
college[,Private]
college[,'Private']
college
college(,'Private')
college[,'Private']
college[,1]
#Create boxplot
boxplot([,1]~[,7],data=college)
#Create boxplot
boxplot(college[,1]~college[,7],data=college)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
#Create boxplot
boxplot(college[,7]~college[,1],data=college)
#Create boxplot
college[,7]
college[,1]
college <- read.csv('College.csv')
college <- read.csv('College.csv')
college <- read.csv('/home/bryce/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/College.csv')
college <- read.csv('/home/bryce/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/College.csv')
rownames(college) = college[,1]
college = college[,-1]
#Create variable summary
collegeSummary <- summary(college)
#Create scatterplot
pairs(college[,1:10])
#Create boxplot
boxplot(college[,7]~college[,1],data=college)
View(college)
getwd
d = getwd
View(d)
setwd(/home/bryce/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College)
setwd('/home/bryce/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College')
getwd
getwd()
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
#Create boxplot
boxplot(Outstate~Private,data=college)
#Create new row for elite
college['Elite'] = rep("No",nrow(college))
View(college)
college[college$Top10perc>50]['Elite'] = 'Yes'
college[college$Top10perc>50][
]
college[college$Top10perc>50]
college[,college$Top10perc>50]['Elite'] = 'Yes'
college[,college$Top10perc>50]
college$Top10perc>50]
college$Top10perc>50
college[college$Top10perc>50,]
college[college$Top10perc>50,]['Elite'] = 'Yes'
summary('Elite')
summary(college$Elite)
summary(college)
#Create new row for elite
college['Elite'] = rep("No",nrow(college))
college[college$Top10perc>50,]['Elite'] = "Yes"
summary(college)
Elite = rep("No",nrow(college))
Elite[college$Top10perc>50] = "Yes"
Elite = rep("No",nrow(college))
Elite[college$Top10perc>50] = "Yes"
Elite = as.factor(Elite)
college = data.frame(college,Elite)
summary(college$Elite)
summary(college)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
# Box plot for Elite
boxplot(Outstate~Elite,data=college)
help(hist)
hist(college$Outstate,breaks=10)
hist(college$Outstate,breaks=12)
# Histograms
hist(college$Apps,breaks=10)
hist(college$Expend,breaks=10)
hist(college$Expend,breaks=5)
hist(college$Expend,breaks=20)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
hist(college$Enroll,breaks=10)
hist(college$Enroll,breaks=15)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/College/prob18.R', echo=TRUE)
#load auto data
auto <- read.csv('Auto.data')
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
getwd()
setwd("~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto")
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
auto
View(auto)
View(auto)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
View(auto)
View(auto)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
#load auto data
auto <- read.csv('Auto.data',sep='')
View(auto)
auto$mpg
quant = c('origin','name','year')
colnames(auto)
colnames(auto) - qualt
colnames(auto) - quant
c(colnames(auto))-quant
setdiff(collnames(auto),quant)
setdiff(colnames(auto),quant)
vect()
vec()
d=c()
d = c(d,12)
d
d = c(d,111)
d
auto['mpg']
auto[,'mpg']
ranges = c()
for (column in quant){
ranges = c(ranges,range(auto[column]))
}
quant
auto[quant[1]]
range(auto[quant[1]])
for (column in quant){
ranges = c(ranges,range(auto[column]))
}
column
ranges = c()
for (column in quant){
ranges = c(ranges,range(auto[column]))
}
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
quant
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
View(auto)
View(auto)
column
range(auto$horsepower)
auto$horsepower
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
auto$horsepower
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
ranges
range(auto$horsepower)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
ranges
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
autos
ranges
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
autos
ranges
range(auto$mpg)
range(auto$mpg)[2]
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
ranges$mpg
range(auto[column],na.rm=TRUE)
d=range(auto[column],na.rm=TRUE)
d
ranges
d=range(auto[column],na.rm=TRUE)
d
c(range(auto[column],na.rm=TRUE))
f['kk']=c(range(auto[column],na.rm=TRUE))
f=list()
f['kk']=c(range(auto[column],na.rm=TRUE))
f
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
ranges
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
ranges
`rownames(ranges)<-`('High','Low')
rownames(ranges)
rownames(ranges) <- c('High','Low')
ranges
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
column
mean(auto$mean)
mean(auto$mpg)
mean(auto[column])
auto[column]
mean(auto[,column])
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
quantProps
auto(11,)
auto[11,]
auto
auto[-10:85,]
auto(-seq(10,85),)
auto[-seq(10,85),]
source('~/OneDrive/Courses/Statistics Textbook/ISLR_Examples/Auto/prob19.R', echo=TRUE)
quantPropsD
#load auto data
auto <- read.csv('Auto.data',sep='')
qualt = c('origin','name','year')
quant = setdiff(colnames(auto),qualt)
auto$horsepower <- suppressWarnings(as.numeric(as.character(auto$horsepower)))
#Part b,c
quantProps <- data.frame(matrix(ncol=length(quant),nrow=4))
colnames(quantProps) <- quant
for (column in colnames(quantProps)){
quantProps[1:2,column] = range(auto[,column],na.rm=TRUE)
quantProps[3,column] = mean(auto[,column],na.rm=TRUE)
quantProps[4,column] = sd(auto[,column],na.rm=TRUE)
}
rownames(quantProps) <- c('Low','High','Mean','Std.Dev')
#Part d,e
autoLimited = auto[-seq(10,85),]
quantPropsD <- data.frame(matrix(ncol=length(quant),nrow=4))
colnames(quantPropsD) <- quant
for (column in colnames(quantPropsD)){
quantPropsD[1:2,column] = range(auto[,column],na.rm=TRUE)
quantPropsD[3,column] = mean(auto[,column],na.rm=TRUE)
quantPropsD[4,column] = sd(auto[,column],na.rm=TRUE)
}
rownames(quantPropsD) <- c('Low','High','Mean','Std.Dev')
#load auto data
auto <- read.csv('Auto.data',sep='')
qualt = c('origin','name','year')
quant = setdiff(colnames(auto),qualt)
auto$horsepower <- suppressWarnings(as.numeric(as.character(auto$horsepower)))
#Part b,c
quantProps <- data.frame(matrix(ncol=length(quant),nrow=4))
colnames(quantProps) <- quant
for (column in colnames(quantProps)){
quantProps[1:2,column] = range(auto[,column],na.rm=TRUE)
quantProps[3,column] = mean(auto[,column],na.rm=TRUE)
quantProps[4,column] = sd(auto[,column],na.rm=TRUE)
}
rownames(quantProps) <- c('Low','High','Mean','Std.Dev')
#Part d,e
autoLimited = auto[-seq(10,85),]
quantPropsD <- data.frame(matrix(ncol=length(quant),nrow=4))
colnames(quantPropsD) <- quant
for (column in colnames(quantPropsD)){
quantPropsD[,column] = c(range(auto[,column],na.rm=TRUE),mean(auto[,column],na.rm=TRUE),sd(auto[,column],na.rm=TRUE))
}
rownames(quantPropsD) <- c('Low','High','Mean','Std.Dev')
#load auto data
auto <- read.csv('Auto.data',sep='')
qualt = c('origin','name','year')
quant = setdiff(colnames(auto),qualt)
auto$horsepower <- suppressWarnings(as.numeric(as.character(auto$horsepower)))
#Part b,c
quantProps <- data.frame(matrix(ncol=length(quant),nrow=4))
colnames(quantProps) <- quant
for (column in colnames(quantProps)){
quantProps[1:2,column] = range(auto[,column],na.rm=TRUE)
quantProps[3,column] = mean(auto[,column],na.rm=TRUE)
quantProps[4,column] = sd(auto[,column],na.rm=TRUE)
}
rownames(quantProps) <- c('Low','High','Mean','Std.Dev')
#Part d,e
autoLimited = auto[-seq(10,85),]
quantPropsD <- data.frame(matrix(ncol=length(quant),nrow=4))
colnames(quantPropsD) <- quant
for (column in colnames(quantPropsD)){
quantPropsD[,column] = c(range(auto[,column],na.rm=TRUE),mean(auto[,column],na.rm=TRUE),sd(auto[,column],na.rm=TRUE))
}
rownames(quantPropsD) <- c('Low','High','Mean','Std.Dev')
boxplot(mpg~year,data=auto)
pairs(quantProps)
View(auto)
pairs(quantProps)
boxplot(mpg~year,data=auto)
plot(auto$mpg,auto$cylinders)
boxplot(auto$mpg~auto$cylinders)
plot(auto$horsepower,auto$mpg)
plot(auto$weight,auto$mpg)
plot(auto$displacement,auto$mpg)
boxplot(auto$mpg~auto$origin)
boxplot(auto$horsepower,auto$cylinders)
boxplot(auto$horsepower~auto$cylinders)
library(MASS)
Boston
?Boston
plot(Boston$medv,Boston$ptratio)
plot(Boston$medv,Boston$black)
plot(Boston$medv,Boston$age)
plot(Boston$age,Boston$medv)
plot(Boston$rm,Boston$medv)
plot(Boston$crim,Boston$medv)
plot(Boston$zn,Boston$medv)
plot(Boston$crim,Boston$medv,log='x')
plot(Boston$zn,Boston$medv,log='x')
plot(Boston$indus,Boston$medv,log='x')
plot(Boston$indus,Boston$medv)
plot(Boston$chas,Boston$medv)
boxplot(Boston$medv~Boston$chas)
plot(Boston$nox,Boston$medv)
plot(Boston$dis,Boston$medv)
plot(Boston$rad,Boston$medv)
plot(Boston$black,Boston$medv)
plot(Boston$black,Boston$medv,log='x')
plot(Boston$lstat,Boston$medv)
pairs(Boston)
pairs(Boston)
pairs(Boston$crim)
Boston %>%
gather(-y_value, key = "some_var_name", value = "some_value_name") %>%
ggplot(aes(x = some_value_name, y = y_value)) +
geom_point() +
facet_wrap(~ some_var_name, scales = "free")
install.packages("magrittr")
install.packages("magrittr")
install.packages("magrittr")
Boston %>% gather() %>% head()
library(magrittr)
Boston %>% gather() %>% head()
Boston %>%
gather(-y_value, key = "some_var_name", value = "some_value_name") %>%
ggplot(aes(x = some_value_name, y = y_value)) +
geom_point() +
facet_wrap(~ some_var_name, scales = "free")
Boston %>% gather() %>% head()
Boston
plot(Boston$age,Boston$medv)
library(MASS)
